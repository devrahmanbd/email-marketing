name: Build, Archive, and Release Binaries

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Build on Linux and macOS
        if: runner.os != 'Windows'
        run: |
          g++ -std=c++17 -O2 -o filter filter.cpp
          g++ -std=c++17 -O2 -o ulp ulp.cpp

      - name: Install mingw on Windows
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          choco install mingw -y
          Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
          $env:PATH += ";C:\ProgramData\mingw64\mingw64\bin"

      - name: Build on Windows using mingw-w64
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
            x86_64-w64-mingw32-g++ -std=c++17 -static -static-libgcc -static-libstdc++ -o filter.exe filter.cpp
            x86_64-w64-mingw32-g++ -std=c++17 -static -static-libgcc -static-libstdc++ -o ulp.exe ulp.cpp -lcomdlg32


      - name: Archive binaries (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          zip binaries-${{ runner.os }}.zip filter ulp

      - name: Archive binaries (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Compress-Archive -Path filter.exe,ulp.exe -DestinationPath binaries-${{ runner.os }}.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.os }}
          path: binaries-${{ runner.os }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.sha }}
          tag_name: v1-${{ github.run_number }}
          files: artifacts/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_PAT }}
